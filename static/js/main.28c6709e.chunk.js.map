{"version":3,"sources":["MediaRenderProp.js","Message.js","mediaHOC.js","App.js","index.js"],"names":["MediaRenderProp","state","matches","mql","window","matchMedia","props","query","screenTest","e","setState","this","addListener","removeListener","children","Component","mediaHOC","WrappedComponent","App","ReactDOM","render","document","getElementById"],"mappings":"iOA6BeA,E,2MA1BbC,MAAQ,CAAEC,SAAS,G,EAEnBC,IAAMC,OAAOC,WAAW,EAAKC,MAAMC,O,EAEnCC,WAAa,SAAAC,GACPA,EAAEP,QACJ,EAAKQ,SAAS,CAAER,SAAS,IAEzB,EAAKQ,SAAS,CAAER,SAAS,K,mFAK3BS,KAAKD,SAAS,CAAER,QAASS,KAAKR,IAAID,UAClCS,KAAKR,IAAIS,YAAYD,KAAKH,c,6CAI1BG,KAAKR,IAAIU,eAAeF,KAAKH,c,+BAI7B,OAAOG,KAAKL,MAAMQ,SAASH,KAAKV,MAAMC,a,GAvBZa,aCGfC,ECHE,SAAAC,GACf,kNACEhB,MAAQ,CAAEC,SAAS,GADrB,EAGEC,IAAMC,OAAOC,WAAW,EAAKC,MAAMC,OAHrC,EAKEC,WAAa,SAAAC,GACPA,EAAEP,QACJ,EAAKQ,SAAS,CAAER,SAAS,IAEzB,EAAKQ,SAAS,CAAER,SAAS,KAT/B,mFAcIS,KAAKD,SAAS,CAAER,QAASS,KAAKR,IAAID,UAClCS,KAAKR,IAAIS,YAAYD,KAAKH,cAf9B,6CAmBIG,KAAKR,IAAIU,eAAeF,KAAKH,cAnBjC,+BAsBI,OAAO,oCAAGG,KAAKV,MAAMC,SAAW,kBAACe,EAAqBN,KAAKL,YAtB/D,GAA+BS,aDElBC,EAFC,kBAAM,qEEgBPE,E,iLAZX,OACE,6BACE,kBAAC,EAAD,CAAiBX,MAAM,uBACpB,SAAAL,GAAO,OAAIA,GAAW,kEAGzB,kBAAC,EAAD,CAASK,MAAM,4B,GARLQ,aCAlBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.28c6709e.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nclass MediaRenderProp extends Component {\r\n  state = { matches: false };\r\n\r\n  mql = window.matchMedia(this.props.query);\r\n\r\n  screenTest = e => {\r\n    if (e.matches) {\r\n      this.setState({ matches: true });\r\n    } else {\r\n      this.setState({ matches: false });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ matches: this.mql.matches });\r\n    this.mql.addListener(this.screenTest);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mql.removeListener(this.screenTest);\r\n  }\r\n\r\n  render() {\r\n    return this.props.children(this.state.matches);\r\n  }\r\n}\r\n\r\nexport default MediaRenderProp;\r\n","import React from 'react';\r\nimport mediaHOC from './mediaHOC';\r\n\r\nconst Message = () => <p>The screen is less than 800 px wide</p>;\r\n\r\nexport default mediaHOC(Message);\r\n","import React, { Component } from 'react';\r\n\r\nconst mediaHOC = WrappedComponent => {\r\n  return class WithMedia extends Component {\r\n    state = { matches: false };\r\n\r\n    mql = window.matchMedia(this.props.query);\r\n\r\n    screenTest = e => {\r\n      if (e.matches) {\r\n        this.setState({ matches: true });\r\n      } else {\r\n        this.setState({ matches: false });\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.setState({ matches: this.mql.matches });\r\n      this.mql.addListener(this.screenTest);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.mql.removeListener(this.screenTest);\r\n    }\r\n    render() {\r\n      return <>{this.state.matches && <WrappedComponent {...this.props} />}</>;\r\n    }\r\n  };\r\n};\r\n\r\nexport default mediaHOC;\r\n","import React, { Component } from 'react';\n\nimport MediaRenderProp from './MediaRenderProp';\nimport Message from './Message';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <MediaRenderProp query='(min-width: 800px)'>\n          {matches => matches && <h2>The screen is wider than 800 px</h2>}\n        </MediaRenderProp>\n\n        <Message query='(max-width: 800px)' />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}